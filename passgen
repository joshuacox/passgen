#!/bin/bash
# Generate a password and immediately copy it to all clipboards by default

# Determine which method of creating a random password we'll use
SHUFFY=$(shuf -i 1-21 -n1 --random-source=/dev/random)

# Define what it means to be a long pass
LONG=63

# Our result store
RESULT=initialized

# regex to test if integer
re='^[0-9]+$'
if [[ $1 =~ $re ]] ; then
  PASS_LENGTH=$1
else
  PASS_LENGTH=11
fi

# Main
main() {
  local FIRST_ARG=$1

	if [[ "$FIRST_ARG" == '-h' || "$FIRST_ARG" == '--help'  ]]; then
		usage
		exit 1
	elif [[ "$FIRST_ARG" == '-l' || "$FIRST_ARG" == '--long'  ]]; then
    longshots
		exit 1
	elif [[ "$FIRST_ARG" == '-a' || "$FIRST_ARG" == '--all' || "$FIRST_ARG" == '-v'  ]]; then
    obedient
    disobedient
    longshots
		exit 1
	elif [[ "$FIRST_ARG" == '-o' || "$FIRST_ARG" == '--obedient'  ]]; then
    obedient
		exit 1
	elif [[ "$FIRST_ARG" == '-t' || "$FIRST_ARG" == '--test'  ]]; then
    tests
		exit 1
	elif [[ "$FIRST_ARG" == '-vt' || "$FIRST_ARG" == '--verbose-test'  ]]; then
    verbosetests
		exit 1
	fi

  clippy

}

# Help
usage() {
	echo -e "Passgen - The CLI Password Generator"
	echo "Usage:"
	echo -e "passgen\t\t-      by default will generate a password with lots of chars
 use a pretty good random and copy to your clipboard, primary and
secondary.i.e. ctrl-shift-v, shift-insert, and middle click all ought to
work in linux and print you out a decent password."
	echo -e "passgen -o\t- generate obedient passwords"
	echo -e "passgen -a\t- generate all passwords"
	echo -e "passgen -l\t- generate long hash passwords"
	echo -e "passgen 12\t- generate 12 character passwords"
}

# Main block of random generators these all obey PASS_LENGTH
obedient() {
  DATE1=$(date +"%y-%m-%d-%H:%M:%S:%p:%N")
  DATE2=$(date +"%N:%y-%m-%d-%H:%M:%S:%P")
  DATE3=$(date +"%N-%S")
  DATE4=$(date +"%S-%N")
  SEED1=$(echo $DATE1:$DATE2:$RANDODD | sha512sum | base64 | head -c 256)
  SEED2=$(echo $SEED1:$DATE3 | md5sum)
  echo $SEED1 | sha256sum | base64 | head -c ${PASS_LENGTH} ; echo
  echo $SEED2 | sha256sum | base64 | head -c ${PASS_LENGTH} ; echo
  echo $DATE1 | sha256sum | base64 | head -c ${PASS_LENGTH} ; echo
  echo $DATE2 | sha256sum | base64 | head -c ${PASS_LENGTH} ; echo
  echo $DATE3 | sha256sum | base64 | head -c ${PASS_LENGTH} ; echo
  echo $DATE4 | sha256sum | base64 | head -c ${PASS_LENGTH} ; echo
  < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${PASS_LENGTH};echo;
  < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-${PASS_LENGTH}};echo;
  < /dev/urandom tr -dc '12345!@#$%qwertQWERTasdfgASDFGzxcvbZXCVB' | head -c${PASS_LENGTH}; echo ""
  strings /dev/urandom | grep -o '[[:alnum:]]' | head -n ${PASS_LENGTH} | tr -d '\n'; echo
  tr -cd '[:alnum:]' < /dev/urandom | fold -w${PASS_LENGTH} | head -n1
  #debug stuff
  #count=1
  #echo "$count";count=$(echo "$count + 1"|bc)
}

clippy () {
  shuffy
  echo -n $RESULT | xclip -i  -selection clipboard
  echo -n $RESULT | xclip -i  -selection primary
  echo -n $RESULT | xclip -i  -selection secondary
  echo $RESULT
}

shuffy () {
  case "$SHUFFY" in
  "1")
      RESULT=$(first_rand)
      ;;
  "2")
      RESULT=$(second_rand)
      ;;
  "3")
      RESULT=$(third_rand)
      ;;
  "4")
      RESULT=$(fourth_rand)
      ;;
  "5")
      RESULT=$(fifth_rand)
      ;;
  "6")
      RESULT=$(sixth_rand)
      ;;
  "7")
      RESULT=$(seventh_rand)
      ;;
  "8")
      RESULT=$(eighth_rand)
      ;;
  "9")
      RESULT=$(nineth_rand)
      ;;
  "10")
      RESULT=$(tenth_rand)
      ;;
  "11")
      RESULT=$(eleventh_rand)
      ;;
  "12")
      RESULT=$(twelfth_rand)
      ;;
  "13")
      RESULT=$(thirteenth_rand)
      ;;
  "14")
      RESULT=$(fourteenth_rand)
      ;;
  "15")
      RESULT=$(fifteenth_rand)
      ;;
  "16")
      RESULT=$(sixteenth_rand)
      ;;
  "17")
      RESULT=$(seventeenth_rand)
      ;;
  "18")
      RESULT=$(eighteenth_rand)
      ;;
  "19")
      RESULT=$(nineteenth_rand)
      ;;
  *)
      RESULT=$(twentieth_rand)
      ;;
  esac
}

first_rand()
{
  local DATE1=$(date +"%y-%m-%d-%H:%M:%S:%p:%N")
  local DATE2=$(date +"%N:%y-%m-%d-%H:%M:%S:%P")
  local RANDODD=$(dd if=/dev/random bs=1 count=101 2>/dev/null | base64 -w 0 | rev | cut -b 2- | rev)
  local SEED1=$(echo $DATE1:$DATE2:$RANDODD | sha512sum | base64 | head -c 256)
  local myresult=$(echo $SEED1 | sha256sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

second_rand()
{
  local DATE3=$(date +"%N-%S")
  local SEED2=$(echo $SEED1:$DATE3 | md5sum)
  local myresult=$(echo $SEED2 | sha256sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

third_rand()
{
  local DATE1=$(date +"%y-%m-%d-%H:%M:%S:%p:%N")
  local myresult=$(echo $DATE1 | sha256sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

fourth_rand()
{
  local DATE2=$(date +"%N:%y-%m-%d-%H:%M:%S:%P")
  local myresult=$(echo $DATE2 | sha256sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

fifth_rand()
{
  local DATE3=$(date +"%N-%S")
  local myresult=$(echo $DATE3 | sha256sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

sixth_rand()
{
  local DATE4=$(date +"%S-%N")
  local myresult=$(echo $DATE4 | sha256sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

seventh_rand()
{
  local myresult=$(< /dev/random tr -dc _A-Z-a-z-0-9 | head -c${PASS_LENGTH})
  echo $myresult
}

eighth_rand()
{
  local myresult=$(< /dev/random tr -dc _A-Z-a-z-0-9 | head -c${1:-${PASS_LENGTH}};)
  echo $myresult
}

nineth_rand()
{
  local myresult=$(< /dev/random tr -dc '12345!@#$%qwertQWERTasdfgASDFGzxcvbZXCVB' | head -c${PASS_LENGTH})
  echo $myresult
}

tenth_rand()
{
  local myresult=$(strings /dev/random | grep -o '[[:alnum:]]' | head -n ${PASS_LENGTH} | tr -d '\n')
  echo $myresult
}

eleventh_rand()
{
  local myresult=$(tr -cd '[:alnum:]' < /dev/random | fold -w${PASS_LENGTH} | head -n1)
  echo $myresult
}

twelfth_rand()
{
  local DATE1=$(date +"%y-%m-%d-%H:%M:%S:%p:%N")
  local myresult=$(echo $DATE1 | sha384sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

thirteenth_rand()
{
  local DATE1=$(date +"%y-%m-%d-%H:%M:%S:%p:%N")
  local myresult=$(echo $DATE1 | sha512sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

fourteenth_rand()
{
  local DATE2=$(date +"%N:%y-%m-%d-%H:%M:%S:%P")
  local myresult=$(echo $DATE2 | sha384sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

fifteenth_rand()
{
  local DATE2=$(date +"%N:%y-%m-%d-%H:%M:%S:%P")
  local myresult=$(echo $DATE2 | sha512sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

sixteenth_rand()
{
  local DATE3=$(date +"%N-%S")
  local myresult=$(echo $DATE3 | sha384sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

seventeenth_rand()
{
  local DATE3=$(date +"%N-%S")
  local myresult=$(echo $DATE3 | sha512sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

eighteenth_rand()
{
  local DATE4=$(date +"%S-%N")
  local myresult=$(echo $DATE4 | sha256sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

nineteenth_rand()
{
  local DATE4=$(date +"%S-%N")
  local myresult=$(echo $DATE4 | sha256sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

twentieth_rand()
{
  local DATE1=$(date +"%y-%m-%d-%H:%M:%S:%p:%N" | rev)
  local DATE2=$(date +"%N:%y-%m-%d-%H:%M:%S:%P")
  local RANDODD=$(dd if=/dev/random bs=1 count=101 2>/dev/null | base64 -w 0 | rev | cut -b 2- | rev)
  local SEED1=$(echo $DATE1:$DATE2:$RANDODD | sha512sum | base64 | head -c 256)
  local myresult=$(echo $SEED1 | sha256sum | base64 | head -c ${PASS_LENGTH})
  echo $myresult
}

# These disobey the PASS_LENGTH
disobedient() {
  DATE1=$(date +"%y-%m-%d-%H:%M:%S:%p:%N")
  DATE2=$(date +"%N:%y-%m-%d-%H:%M:%S:%P")
  DATE3=$(date +"%N-%S")
  DATE4=$(date +"%S-%N")
  SEED1=$(echo $DATE1:$DATE2:$RANDODD | sha512sum | base64 | head -c 256)
  SEED2=$(echo $SEED1:$DATE3 | md5sum)
  openssl rand -base64 ${PASS_LENGTH}
  dd if=/dev/urandom bs=1 count=${PASS_LENGTH} 2>/dev/null | base64 -w 0 | rev | cut -b 2- | rev
  # These badly to disobey the PASS_LENGTH
  echo $SEED1 | md5sum
  echo $SEED2 | md5sum
  echo $DATE1 | md5sum
  echo $DATE2 | md5sum
  echo $DATE3 | md5sum
  echo $DATE4 | md5sum
  echo $SEED1 | sha1sum
  echo $SEED2 | sha1sum
  echo $DATE1 | sha1sum
  echo $DATE2 | sha1sum
  echo $DATE3 | sha1sum
  echo $DATE4 | sha1sum
  echo $SEED1 | sha256sum
  echo $SEED2 | sha256sum
  echo $DATE1 | sha256sum
  echo $DATE2 | sha256sum
  echo $DATE3 | sha256sum
  echo $DATE4 | sha256sum
}
longshots() {
  DATE1=$(date +"%y-%m-%d-%H:%M:%S:%p:%N")
  DATE2=$(date +"%N:%y-%m-%d-%H:%M:%S:%P")
  DATE3=$(date +"%N-%S")
  DATE4=$(date +"%S-%N")
  SEED1=$(echo $DATE1:$DATE2:$RANDODD | sha512sum | base64 | head -c 256)
  SEED2=$(echo $SEED1:$DATE3 | md5sum)
  echo $SEED1 | sha384sum
  echo $SEED2 | sha384sum
  echo $DATE1 | sha384sum
  echo $DATE2 | sha384sum
  echo $DATE3 | sha384sum
  echo $DATE4 | sha384sum
  echo $SEED1 | sha512sum
  echo $SEED2 | sha512sum
  echo $DATE1 | sha512sum
  echo $DATE2 | sha512sum
  echo $DATE3 | sha512sum
}
tests() {
  shuffy
  echo $RESULT | ent
}
verbosetests() {
  PASS_LENGTH=33
  counter=20
  while [ $counter -gt 0 ]
  do
    SHUFFY=$counter
    shuffy
    echo testing $SHUFFY _rand function
    echo RESULT = $RESULT
    echo $RESULT | ent
    counter=$(( $counter - 1 ))
  done
}

main "$@"
